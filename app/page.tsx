'use client'
import { ChangeEvent, useEffect, useState } from "react";
import Loader from "./_components/Loader";
import FormField from "./_components/FormField";
import { AllDbPost } from "./lib/posts";
import RenderCards from "./_components/RenderCards";
import { Post } from "@prisma/client";
import Navbar from "./_components/Navbar";

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState<Array<Post>>();
  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState<Array<Post>>();
  
  const handleSearchChange = (e:ChangeEvent<HTMLInputElement>)=>{
    
    setSearchText(e.target.value);
    const searchedResults = allPosts?.filter((item)=> item.name.toLowerCase().includes(searchText.toLowerCase())||item.prompt.toLowerCase().includes(searchText.toLowerCase()))
    setSearchedResults(searchedResults)
  }
  const fetchPosts = async()=>{
    setLoading(true)
    try {
      const res = await AllDbPost();
      setAllPosts(res);
      
    } catch (error) {
     console.log(error);
      alert('Error while fetching posts')
    }
    setLoading(false);
  }
  useEffect(()=>{
    fetchPosts();
  },[])
  return (
    <>
    <Navbar/>
    
    <section className="max-w-7xl mx-auto my-10">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
             {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing Resuls for: <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                />
              ) : (
                <RenderCards
                  data={allPosts}
                />
              )}  
            </div>
          </>
        )}
      </div>
    </section>
    </>
  );
}
